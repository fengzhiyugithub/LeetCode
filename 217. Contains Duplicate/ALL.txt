Given an array of integers, find if the array contains any duplicates.

Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.

**Example 1:**

```
Input: [1,2,3,1]
Output: true
```

**Example 2:**

```
Input: [1,2,3,4]
Output: false
```

**Example 3:**

```
Input: [1,1,1,3,3,4,3,2,4,2]
Output: true
```

题意：判断vector中是否有重复的数

分析：如果已知数组的范围，可以使用标记数组，但是范围不知道，所以最好使用vector标记。 或者set、map 统计

```c++
/*
* @Author: yufeng
* @Date:   2018-10-12 15:29:12
* @Last Modified by:   yufeng
* @Last Modified time: 2018-10-12 15:50:48
* @Email: fzhiy270@sina.com
* @Blog: http://fzhiy.com/
*/
// 方法一sort()
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        for(int i=0; i<int(nums.size())-1; i++){
        	if(nums[i]==nums[i+1]){
        		return true;
        	}
        }
        return false;
    }
};


///set().size
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        return nums.size()>set<int>(nums.begin(), nums.end()).size();
    }
};


///map
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        std::map<int, bool> map;
        for(auto& x: nums){
        	if(map.find(x)!=map.end()){
        		return true;
        	}else {
        		map[x]=1;
        	}
        }
        return false;
    }
};
```

