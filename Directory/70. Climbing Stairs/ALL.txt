You are climbing a stair case. It takes *n* steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

**Note:** Given *n* will be a positive integer.

**Example 1:**

```
Input: 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
```

**Example 2:**

```
Input: 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
```

```c++
/*
* @Author: yufeng
* @Date:   2018-10-08 16:38:06
* @Last Modified by:   yufeng
* @Last Modified time: 2018-10-08 16:41:39
* @Email: fzhiy270@sina.com
* @Blog: http://fzhiy.com/
*/
class Solution {
public:
    int climbStairs(int n) {
        int f1=1, f2=2;
        for(int i=1; i<n; i++){
        	int tmp=f2;
        	f2+=f1;
        	f1=tmp;
        }
        return f1;
    }
};
```

