Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, [twoâ€™s complement](https://en.wikipedia.org/wiki/Two%27s_complement) method is used.

**Note:**

1. All letters in hexadecimal (`a-f`) must be in lowercase.
2. The hexadecimal string must not contain extra leading `0`s. If the number is zero, it is represented by a single zero character `'0'`; otherwise, the first character in the hexadecimal string will not be the zero character.
3. The given number is guaranteed to fit within the range of a 32-bit signed integer.
4. You **must not use any method provided by the library** which converts/formats the number to hex directly.



**Example 1:**

```
Input:
26

Output:
"1a"
```



**Example 2:**

```
Input:
-1

Output:
"ffffffff"
```



```c++
/*
* @Author: yufeng
* @Date:   2018-10-20 18:53:11
* @Last Modified by:   yufeng
* @Last Modified time: 2018-10-20 18:58:47
* @Email: fzhiy270@sina.com
* @Blog: http://fzhiy.com/
*/

class Solution {
public:
	string hex = "0123456789abcdef";
    string toHex(int num) {
    	if(!num) {
    		return "0";
    	}
        string res = "";
        int cnt=0;
        while(num && cnt++<8){
        	res = hex[(num & 0xf)] + res;
        	num >>= 4;
        }
        return res;
    }
};
```

