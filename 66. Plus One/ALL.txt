Given a non-empty array of digits representing a non-negative integer, plus one to the integer.

The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.

You may assume the integer does not contain any leading zero, except the number 0 itself.

Example 1:

Input: [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Example 2:

Input: [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.

题意：给用vector表示的非负数+1并以vector形式输出
分析：一开始想到转换为long long 类型，然后+1转换为vector；但是题中并未提及数的大小，所以可能超出long long的范围，确实
不能用整形来存储，所以就直接在原vector上操作； 注意有可能是999……的情况。

C++
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        for(int i=digits.size()-1; i>=0; i--) {
            if(++digits[i]%=10) {///如果经过+1后当前位不为10
                return digits;
            }
        }
        ///位数+1
        digits[0]=1;
        digits.push_back(0);
        return digits;
    }
};