Reverse a singly linked list.

**Example:**

```
Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL
```

**Follow up:**

A linked list can be reversed either iteratively or recursively. Could you implement both?

题意：链表反转

分析：存储两个节点，前一个节点和下一个节点

```
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL){
        	return NULL;
        }
        ListNode* pre=NULL;
        ListNode* next=NULL;
        while(head!=NULL){
        	next=head->next;
        	head->next=pre;
        	pre=head;
        	head=next;
        }
        return pre;
    }
};
```

