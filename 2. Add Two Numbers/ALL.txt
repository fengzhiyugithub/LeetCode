You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.


题意：给定两个数的链表逆序，求相加后的结果

分析：模拟
class Solution {
public:
    int reverse(int x) {
        bool flag = 0;
        if(x<0) {
            x = -x;
            flag = 1;
        }
        long long ans = 0;
        while(x) {
            ans = ans * 10 + x % 10;
            x /= 10;
        }
        if(flag) {
            ans = -ans;
        }
        if(ans < -(1LL<<31) || ans > (1LL<<31)-1) {
            return 0;
        }
        return ans;
    }
};